plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.netflix.dgs.codegen' version '6.0.2'
}

group = 'com.course'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:7.3.2'))
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter:7.3.2'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars:7.3.2'
	implementation 'net.datafaker:datafaker:2.0.1'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars:7.3.2'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure:7.3.2'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.apache.commons:commons-lang3:3.13.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava {
	packageName = 'com.course.graphql.generated'
	generateClient = true
	typeMapping = ["Date": "java.time.LocalDate",
				   "NonNegativeInt": "java.lang.Integer",
				   "Url": "java.net.URL",
				   "DateTime": "java.time.OffsetDateTime"]
}
